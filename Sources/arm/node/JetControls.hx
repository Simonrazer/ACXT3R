package arm.node;

@:keep class JetControls extends armory.logicnode.LogicTree {

	public function new() { super(); notifyOnAdd(add); }

	override public function add() {
		var _RotateObject = new armory.logicnode.RotateObjectNode(this);
		var _OnMouse = new armory.logicnode.OnMouseNode(this);
		_OnMouse.property0 = "Down";
		_OnMouse.property1 = "left";
		_OnMouse.addOutputs([_RotateObject]);
		_RotateObject.addInput(_OnMouse, 0);
		_RotateObject.addInput(new armory.logicnode.ObjectNode(this, "Jet"), 0);
		var _Vector_001 = new armory.logicnode.VectorNode(this);
		_Vector_001.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		var _Math = new armory.logicnode.MathNode(this);
		_Math.property0 = "Multiply";
		_Math.property1 = "false";
		var _Float = new armory.logicnode.FloatNode(this);
		_Float.addInput(new armory.logicnode.FloatNode(this, 0.10000000149011612), 0);
		var _Vector_002 = new armory.logicnode.VectorNode(this);
		_Vector_002.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_002.addInput(_Float, 0);
		_Vector_002.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		var _RotateObject_001 = new armory.logicnode.RotateObjectNode(this);
		var _OnMouse_001 = new armory.logicnode.OnMouseNode(this);
		_OnMouse_001.property0 = "Down";
		_OnMouse_001.property1 = "right";
		_OnMouse_001.addOutputs([_RotateObject_001]);
		_RotateObject_001.addInput(_OnMouse_001, 0);
		_RotateObject_001.addInput(new armory.logicnode.ObjectNode(this, "Jet"), 0);
		_RotateObject_001.addInput(_Vector_002, 0);
		_RotateObject_001.addOutputs([new armory.logicnode.NullNode(this)]);
		_Vector_002.addOutputs([_RotateObject_001]);
		_Float.addOutputs([_Math, _Vector_002]);
		_Math.addInput(_Float, 0);
		_Math.addInput(new armory.logicnode.FloatNode(this, -1.0), 0);
		_Math.addOutputs([_Vector_001]);
		_Vector_001.addInput(_Math, 0);
		_Vector_001.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_001.addOutputs([_RotateObject]);
		_RotateObject.addInput(_Vector_001, 0);
		_RotateObject.addOutputs([new armory.logicnode.NullNode(this)]);
		var _ApplyImpulse_004 = new armory.logicnode.ApplyImpulseNode(this);
		var _IsTrue = new armory.logicnode.IsTrueNode(this);
		var _OnKeyboard_003 = new armory.logicnode.OnKeyboardNode(this);
		_OnKeyboard_003.property0 = "Down";
		_OnKeyboard_003.property1 = "d";
		var _IsFalse = new armory.logicnode.IsFalseNode(this);
		_IsFalse.addInput(_OnKeyboard_003, 0);
		var _Mouse = new armory.logicnode.MouseNode(this);
		_Mouse.property0 = "Down";
		_Mouse.property1 = "right";
		_Mouse.addOutputs([_IsFalse, _IsTrue, _Mouse]);
		_IsFalse.addInput(_Mouse, 0);
		var _IsFalse_003 = new armory.logicnode.IsFalseNode(this);
		_IsFalse_003.addInput(_IsFalse, 0);
		var _Mouse_002 = new armory.logicnode.MouseNode(this);
		_Mouse_002.property0 = "Down";
		_Mouse_002.property1 = "left";
		var _IsFalse_001 = new armory.logicnode.IsFalseNode(this);
		var _OnKeyboard_002 = new armory.logicnode.OnKeyboardNode(this);
		_OnKeyboard_002.property0 = "Down";
		_OnKeyboard_002.property1 = "a";
		var _IsTrue_001 = new armory.logicnode.IsTrueNode(this);
		_IsTrue_001.addInput(_OnKeyboard_002, 0);
		_IsTrue_001.addInput(_Mouse_002, 0);
		var _ApplyImpulse_005 = new armory.logicnode.ApplyImpulseNode(this);
		_ApplyImpulse_005.addInput(_IsTrue_001, 0);
		_ApplyImpulse_005.addInput(new armory.logicnode.ObjectNode(this, "Jet"), 0);
		var _Vector_006 = new armory.logicnode.VectorNode(this);
		var _Math_002 = new armory.logicnode.MathNode(this);
		_Math_002.property0 = "Multiply";
		_Math_002.property1 = "false";
		var _Float_002 = new armory.logicnode.FloatNode(this);
		_Float_002.addInput(new armory.logicnode.FloatNode(this, 1.2000000476837158), 0);
		var _Vector_005 = new armory.logicnode.VectorNode(this);
		_Vector_005.addInput(_Float_002, 0);
		_Vector_005.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_005.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_005.addOutputs([_ApplyImpulse_004]);
		_Float_002.addOutputs([_Math_002, _Vector_005]);
		_Math_002.addInput(_Float_002, 0);
		_Math_002.addInput(new armory.logicnode.FloatNode(this, -1.0), 0);
		_Math_002.addOutputs([_Vector_006]);
		_Vector_006.addInput(_Math_002, 0);
		_Vector_006.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_006.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_006.addOutputs([_ApplyImpulse_005]);
		_ApplyImpulse_005.addInput(_Vector_006, 0);
		_ApplyImpulse_005.addOutputs([new armory.logicnode.NullNode(this)]);
		_IsTrue_001.addOutputs([_ApplyImpulse_005]);
		var _IsTrue_002 = new armory.logicnode.IsTrueNode(this);
		_IsTrue_002.addInput(_OnKeyboard_002, 0);
		_IsTrue_002.addInput(_Mouse, 0);
		var _ApplyImpulse_006 = new armory.logicnode.ApplyImpulseNode(this);
		_ApplyImpulse_006.addInput(_IsTrue_002, 0);
		_ApplyImpulse_006.addInput(new armory.logicnode.ObjectNode(this, "Jet"), 0);
		var _Vector_008 = new armory.logicnode.VectorNode(this);
		var _Math_003 = new armory.logicnode.MathNode(this);
		_Math_003.property0 = "Multiply";
		_Math_003.property1 = "false";
		var _Float_003 = new armory.logicnode.FloatNode(this);
		_Float_003.addInput(new armory.logicnode.FloatNode(this, 0.25), 0);
		var _Vector_007 = new armory.logicnode.VectorNode(this);
		_Vector_007.addInput(_Float_003, 0);
		_Vector_007.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_007.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		var _ApplyImpulse_007 = new armory.logicnode.ApplyImpulseNode(this);
		var _IsTrue_003 = new armory.logicnode.IsTrueNode(this);
		_IsTrue_003.addInput(_OnKeyboard_003, 0);
		_IsTrue_003.addInput(_Mouse_002, 0);
		_IsTrue_003.addOutputs([_ApplyImpulse_007]);
		_ApplyImpulse_007.addInput(_IsTrue_003, 0);
		_ApplyImpulse_007.addInput(new armory.logicnode.ObjectNode(this, "Jet"), 0);
		_ApplyImpulse_007.addInput(_Vector_007, 0);
		_ApplyImpulse_007.addOutputs([new armory.logicnode.NullNode(this)]);
		_Vector_007.addOutputs([_ApplyImpulse_007]);
		_Float_003.addOutputs([_Math_003, _Vector_007]);
		_Math_003.addInput(_Float_003, 0);
		_Math_003.addInput(new armory.logicnode.FloatNode(this, -1.0), 0);
		_Math_003.addOutputs([_Vector_008]);
		_Vector_008.addInput(_Math_003, 0);
		_Vector_008.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_008.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_008.addOutputs([_ApplyImpulse_006]);
		_ApplyImpulse_006.addInput(_Vector_008, 0);
		_ApplyImpulse_006.addOutputs([new armory.logicnode.NullNode(this)]);
		_IsTrue_002.addOutputs([_ApplyImpulse_006]);
		var _Merge_001 = new armory.logicnode.MergeNode(this);
		_Merge_001.addInput(_OnKeyboard_002, 0);
		var _ApplyImpulse_001 = new armory.logicnode.ApplyImpulseNode(this);
		var _OnKeyboard_001 = new armory.logicnode.OnKeyboardNode(this);
		_OnKeyboard_001.property0 = "Down";
		_OnKeyboard_001.property1 = "w";
		_OnKeyboard_001.addOutputs([_ApplyImpulse_001]);
		_ApplyImpulse_001.addInput(_OnKeyboard_001, 0);
		_ApplyImpulse_001.addInput(new armory.logicnode.ObjectNode(this, "Jet"), 0);
		var _Vector_004 = new armory.logicnode.VectorNode(this);
		_Vector_004.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		var _Float_004 = new armory.logicnode.FloatNode(this);
		_Float_004.addInput(new armory.logicnode.FloatNode(this, 0.6000000238418579), 0);
		var _Math_001 = new armory.logicnode.MathNode(this);
		_Math_001.property0 = "Multiply";
		_Math_001.property1 = "false";
		_Math_001.addInput(_Float_004, 0);
		_Math_001.addInput(new armory.logicnode.FloatNode(this, -1.0), 0);
		var _Vector_003 = new armory.logicnode.VectorNode(this);
		_Vector_003.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_003.addInput(_Math_001, 0);
		_Vector_003.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_003.addOutputs([new armory.logicnode.VectorNode(this, 0.0, 0.0, 0.0)]);
		var _Vector_010 = new armory.logicnode.VectorNode(this);
		_Vector_010.addInput(_Math_001, 0);
		_Vector_010.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_010.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		var _ApplyImpulse_003 = new armory.logicnode.ApplyImpulseNode(this);
		var _IsFalse_002 = new armory.logicnode.IsFalseNode(this);
		_IsFalse_002.addInput(_IsFalse_001, 0);
		_IsFalse_002.addInput(_Mouse, 0);
		_IsFalse_002.addOutputs([_ApplyImpulse_003]);
		_ApplyImpulse_003.addInput(_IsFalse_002, 0);
		_ApplyImpulse_003.addInput(new armory.logicnode.ObjectNode(this, "Jet"), 0);
		_ApplyImpulse_003.addInput(_Vector_010, 0);
		_ApplyImpulse_003.addOutputs([new armory.logicnode.NullNode(this)]);
		_Vector_010.addOutputs([_ApplyImpulse_003]);
		_Math_001.addOutputs([_Vector_003, _Vector_010]);
		var _Vector_009 = new armory.logicnode.VectorNode(this);
		_Vector_009.addInput(_Float_004, 0);
		_Vector_009.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_009.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		var _ApplyImpulse_002 = new armory.logicnode.ApplyImpulseNode(this);
		_ApplyImpulse_002.addInput(_IsFalse_003, 0);
		_ApplyImpulse_002.addInput(new armory.logicnode.ObjectNode(this, "Jet"), 0);
		_ApplyImpulse_002.addInput(_Vector_009, 0);
		_ApplyImpulse_002.addOutputs([new armory.logicnode.NullNode(this)]);
		_Vector_009.addOutputs([_ApplyImpulse_002]);
		_Float_004.addOutputs([_Math_001, _Vector_004, _Vector_009]);
		_Vector_004.addInput(_Float_004, 0);
		_Vector_004.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_004.addOutputs([_ApplyImpulse_001]);
		_ApplyImpulse_001.addInput(_Vector_004, 0);
		var _Merge = new armory.logicnode.MergeNode(this);
		_Merge.addInput(_OnKeyboard_003, 0);
		_Merge.addInput(_ApplyImpulse_001, 0);
		var _PlayAction_001 = new armory.logicnode.PlayActionNode(this);
		_PlayAction_001.addInput(_Merge, 0);
		_PlayAction_001.addInput(new armory.logicnode.ObjectNode(this, "Thruster_R"), 0);
		_PlayAction_001.addInput(new armory.logicnode.StringNode(this, "Thruster_RAction"), 0);
		_PlayAction_001.addOutputs([new armory.logicnode.NullNode(this)]);
		var _PauseAction = new armory.logicnode.PauseActionNode(this);
		_PauseAction.addInput(_PlayAction_001, 1);
		_PauseAction.addInput(new armory.logicnode.ObjectNode(this, "Thruster_R"), 0);
		_PauseAction.addOutputs([new armory.logicnode.NullNode(this)]);
		_PlayAction_001.addOutputs([_PauseAction]);
		_Merge.addOutputs([_PlayAction_001]);
		_ApplyImpulse_001.addOutputs([_Merge, _Merge_001]);
		_Merge_001.addInput(_ApplyImpulse_001, 0);
		var _PlayAction = new armory.logicnode.PlayActionNode(this);
		_PlayAction.addInput(_Merge_001, 0);
		_PlayAction.addInput(new armory.logicnode.ObjectNode(this, "Thruster_L"), 0);
		_PlayAction.addInput(new armory.logicnode.StringNode(this, "Thruster_LAction"), 0);
		_PlayAction.addOutputs([new armory.logicnode.NullNode(this)]);
		var _PauseAction_001 = new armory.logicnode.PauseActionNode(this);
		_PauseAction_001.addInput(_PlayAction, 1);
		_PauseAction_001.addInput(new armory.logicnode.ObjectNode(this, "Thruster_L"), 0);
		_PauseAction_001.addOutputs([new armory.logicnode.NullNode(this)]);
		_PlayAction.addOutputs([_PauseAction_001]);
		_Merge_001.addOutputs([_PlayAction]);
		_OnKeyboard_002.addOutputs([_IsFalse_001, _IsTrue_001, _IsTrue_002, _Merge_001]);
		_IsFalse_001.addInput(_OnKeyboard_002, 0);
		_IsFalse_001.addInput(_Mouse_002, 0);
		_IsFalse_001.addOutputs([_IsFalse_002]);
		_Mouse_002.addOutputs([_IsFalse_001, _IsTrue_001, _Mouse_002]);
		_IsFalse_003.addInput(_Mouse_002, 0);
		_IsFalse_003.addOutputs([_ApplyImpulse_002]);
		_IsFalse.addOutputs([_IsFalse_003]);
		_OnKeyboard_003.addOutputs([_IsFalse, _IsTrue, _IsTrue_003, _Merge]);
		_IsTrue.addInput(_OnKeyboard_003, 0);
		_IsTrue.addInput(_Mouse, 0);
		_IsTrue.addOutputs([_ApplyImpulse_004]);
		_ApplyImpulse_004.addInput(_IsTrue, 0);
		_ApplyImpulse_004.addInput(new armory.logicnode.ObjectNode(this, "Jet"), 0);
		_ApplyImpulse_004.addInput(_Vector_005, 0);
		_ApplyImpulse_004.addOutputs([new armory.logicnode.NullNode(this)]);
		var _SetRotation = new armory.logicnode.SetRotationNode(this);
		var _OnUpdate = new armory.logicnode.OnUpdateNode(this);
		_OnUpdate.addOutputs([_SetRotation]);
		_SetRotation.addInput(_OnUpdate, 0);
		_SetRotation.addInput(new armory.logicnode.ObjectNode(this, "Jet"), 0);
		var _Vector = new armory.logicnode.VectorNode(this);
		_Vector.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		var _SeparateXYZ = new armory.logicnode.SeparateVectorNode(this);
		var _SeparateTransform = new armory.logicnode.SeparateTransformNode(this);
		var _GetTransform = new armory.logicnode.GetTransformNode(this);
		_GetTransform.addInput(new armory.logicnode.ObjectNode(this, "Jet"), 0);
		_GetTransform.addOutputs([_SeparateTransform]);
		_SeparateTransform.addInput(_GetTransform, 0);
		_SeparateTransform.addOutputs([new armory.logicnode.VectorNode(this, 0.0, 0.0, 0.0)]);
		_SeparateTransform.addOutputs([_SeparateXYZ]);
		_SeparateTransform.addOutputs([new armory.logicnode.VectorNode(this, 0.0, 0.0, 0.0)]);
		_SeparateXYZ.addInput(_SeparateTransform, 1);
		_SeparateXYZ.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_SeparateXYZ.addOutputs([_Vector]);
		_SeparateXYZ.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_Vector.addInput(_SeparateXYZ, 1);
		_Vector.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector.addOutputs([_SetRotation]);
		_SetRotation.addInput(_Vector, 0);
		_SetRotation.addOutputs([new armory.logicnode.NullNode(this)]);
		var _ApplyImpulse = new armory.logicnode.ApplyImpulseNode(this);
		var _OnKeyboard = new armory.logicnode.OnKeyboardNode(this);
		_OnKeyboard.property0 = "Down";
		_OnKeyboard.property1 = "s";
		_OnKeyboard.addOutputs([_ApplyImpulse]);
		_ApplyImpulse.addInput(_OnKeyboard, 0);
		_ApplyImpulse.addInput(new armory.logicnode.ObjectNode(this, "Jet"), 0);
		var _Vector_011 = new armory.logicnode.VectorNode(this);
		_Vector_011.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		var _Math_004 = new armory.logicnode.MathNode(this);
		_Math_004.property0 = "Multiply";
		_Math_004.property1 = "false";
		var _Float_005 = new armory.logicnode.FloatNode(this);
		_Float_005.addInput(new armory.logicnode.FloatNode(this, 0.30000001192092896), 0);
		_Float_005.addOutputs([_Math_004]);
		_Math_004.addInput(_Float_005, 0);
		_Math_004.addInput(new armory.logicnode.FloatNode(this, -1.0), 0);
		_Math_004.addOutputs([_Vector_011]);
		_Vector_011.addInput(_Math_004, 0);
		_Vector_011.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_011.addOutputs([_ApplyImpulse]);
		_ApplyImpulse.addInput(_Vector_011, 0);
		_ApplyImpulse.addOutputs([new armory.logicnode.NullNode(this)]);
	}
}
